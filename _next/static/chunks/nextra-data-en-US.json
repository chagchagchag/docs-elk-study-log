{"/elasticsearch/aggregation":{"title":"Aggregation","data":{"aggregation#Aggregation":"","세팅--예제-데이터-import#세팅 & 예제 데이터 import":"세팅 & 예제 데이터 import 를 참고해주세요.","aggregation-api#Aggregation API":"","요약#요약":"Aggregation API 에는 Metric Aggregation , Bucket Aggregation 과 같은 Aggregation 연산들이 존재합니다.Metric Aggregation : 주로 산술 연산과 관련된 통계 연산들입니다. Sum,Avg, Min, Max, Cardinality, Percentiles 등과 같은 연산이 있습니다. keyword 를 사용하지 않고 숫자값만을 사용해야 합니다.\nsum, avg, min, max, stats : 총합, 평균, 최소, 최대 값을 구하려 할때 사용하는 연산입니다. sum, avg, min, max 를 한꺼번에 구할 때는 stats 를 사용하면 좋습니다.\ncardinality : 유니크한 값이 몇개인지(종류가 몇 개인지 등)을 알아내려 할 때 cardinality 를 사용합니다. keyword, IP 출현횟수 등과 같은 것들을 집계할 때 유용합니다.\npercentiles, percentile_ranks : 백분위 값을 위한 연산 입니다.\nBucket Aggregation : 조건에 따른 버킷들을 분류해서 생성하고 그룹으로 모읍니다. 버킷 마다 포함되는 도큐먼트의 갯수는 doc_count 값으로 표시합니다.\nrange : 숫자 필드와 from(이상) ~ to(미만) 를 통해 범위를 지정하고, 이 범위에 해당하는 버킷을 만듭니다.\nhistogram : 인자값으로 전달하는 interval 수치 만큼 버킷을 구분하며, interval 만큼에 해당하는 문서들이 얼마나 존재하는지 확인할 때 사용합니다.\ndate_histogram , date_range : 날짜 간격을 통해서 버킷을 생성해서 통계를 내립니다.\nterms : terms 필드에 지정한 문자열을 기준으로 버킷을 생성합니다. top, size, order 등을 지정 가능합니다.\nsub-aggregation : aggs 안에 aggs 를 하는 것을 의미합니다. 하위 버킷이 늘어나서 점점 깊이가  깊어질 수록 작업량도 늘어나고 메모리 소모량도 커지기에 오류 가능성이 커집니다. 따라서 aggs 를 지나치게 중첩해서 2레벨 이상으로 사용하는 것은 권장되지 않습니다.","metric-aggregation#Metric Aggregation":"주로 산술 연산과 관련된 통계 연산들입니다. Sum,Avg, Min, Max, Cardinality, Percentiles 등과 같은 연산이 있습니다.","sum-avg-min-max-stats#sum, avg, min, max, stats":"e.g.\n\"size\": 0, 을 지정한 이유는  필요없는 \"hits\" :[...] 항목이 너무 많이 나타나서 0으로 지정했습니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"sum_base_prices\": {\r\n      \"sum\":{ // (1)\r\n        \"field\": \"products.base_price\"\r\n      }\r\n    }\r\n  }\r\n}\n(1)\n\"sum\" 연산을 지정해줬고, \"field\" 항목에 어떤 필드를 기준으로 \"sum\" 을 할지를 지정해줬습니다.\n출력결과\n{\r\n  \"took\": 24,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"sum_of_base_price\": {\r\n      \"value\": 351900.359375\r\n    }\r\n  }\r\n}\ne.g.\n(1) : 남성에 해당하는 직원들의 SUM 연산을 수행합니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"customer_gender\": \"MALE\" // (1)\r\n    }\r\n  },\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"sum_base_prices\": {\r\n      \"sum\":{\r\n        \"field\": \"products.base_price\"\r\n      }\r\n    }\r\n  }\r\n}\ne.g.\n(1) : sum, avg, min, max 를 한꺼번에 구할 때는 stats 를 사용하면 좋습니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"customer_gender\": \"MALE\"\r\n    }\r\n  },\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"sum_base_prices\": {\r\n      \"stats\":{ // (1)\r\n        \"field\": \"products.base_price\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 4,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 2242,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"sum_base_prices\": {\r\n      \"count\": 4913,\r\n      \"min\": 6.98828125,\r\n      \"max\": 1080,\r\n      \"avg\": 35.01005304803582,\r\n      \"sum\": 172004.390625\r\n    }\r\n  }\r\n}","cardinality#cardinality":"유니크한 값이 몇개인지(종류가 몇 개인지 등)을 알아내려 할 때 cardinality 를 사용합니다. keyword, IP 출현횟수 등과 같은 것들을 집계할 때 유용합니다.e.g.\n(1) : cardinality 를 지정해서 keyword 가 몇개 출현하는지를 쿼리하도록 지정했습니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"categories\": {\r\n      \"cardinality\": { // (1)\r\n        \"field\": \"products.category.keyword\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 3,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"categories\": {\r\n      \"value\": 6\r\n    }\r\n  }\r\n}\ne.g.\n(1) : cardinality 를 지정해줬습니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"sku_cardinality\": {\r\n      \"cardinality\": { // (1)\r\n        \"field\": \"products.category.keyword\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 6,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"sku_cardinality\": {\r\n      \"value\": 6\r\n    }\r\n  }\r\n}","percentiles-percentile_ranks#percentiles, percentile_ranks":"percentiles 연산은 백분위값을 의미하며 백분위 값을 기준으로 순위를 내릴 수도 있고, [from,  to] 로 특정 범위 내의 데이터를 구할 수도 있으며, 특정 백분위에 속하는 값을 찾아낼 수도 있습니다.e.g. percentiles\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"percentiles_prices\": {\r\n      \"percentiles\": {\r\n        \"field\": \"products.price\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 32,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"percentiles_prices\": {\r\n      \"values\": {\r\n        \"1.0\": 7.98828125,\r\n        \"5.0\": 10.976366370292887,\r\n        \"25.0\": 17.563580635112924,\r\n        \"50.0\": 27.006052606227954,\r\n        \"75.0\": 45.60907611964553,\r\n        \"95.0\": 81.14404807144214,\r\n        \"99.0\": 126.62510880782465\r\n      }\r\n    }\r\n  }\r\n}\n출력결과를 보면 1%, 5%, 25%, 50%, 75%, 95%, 99% 에 해당하는 가격 구간대가 계산되어 있음을 확인 가능합니다.percentiles 옵션에 다른 옵션을 주지 않으면 이렇게 결정되는 것으로 보입니다.\ne.g. percentile_ranks\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"percentiles_prices_from_to\": {\r\n      \"percentiles\": {\r\n        \"field\": \"products.price\",\r\n        \"percents\": [\r\n          10, 20\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"percentiles_prices_from_to\": {\r\n      \"values\": {\r\n        \"10.0\": 11.78278168657541,\r\n        \"20.0\": 15.423417589478415\r\n      }\r\n    }\r\n  }\r\n}","bucket-aggregation#Bucket Aggregation":"조건에 따른 버킷들을 분류해서 생성하고 그룹으로 모읍니다. 버킷 마다 포함되는 도큐먼트의 갯수는 doc_count 값으로 표시합니다. Bucket 연산에는 아래와 같이 Range, Histogram, date_histogram, date_range , terms , sub-aggregation 과 같은 연산들이 있습니다.\nRange : 숫자 필드와 from(이상) ~ to(미만) 를 통해 범위를 지정하고, 이 범위에 해당하는 버킷을 만듭니다.\nHistogram : 인자값으로 전달하는 interval 수치 만큼 버킷을 구분하며, interval 만큼에 해당하는 문서들이 얼마나 존재하는지 확인할 때 사용합니다.\ndate_histogram , date_range : 날짜 간격을 통해서 버킷을 생성해서 통계를 내립니다.\nterms : terms 필드에 지정한 문자열을 기준으로 버킷을 생성합니다. top, size, order 등을 지정 가능합니다.\nsub-aggregation : aggs 안에 aggs 를 하는 것을 의미합니다. 하위 버킷이 늘어나서 점점 깊이가  깊어질 수록 작업량도 늘어나고 메모리 소모량도 커지기에 오류 가능성이 커집니다. 따라서 aggs 를 지나치게 중첩해서 2레벨 이상으로 사용하는 것은 권장되지 않습니다.","range#range":"숫자 필드와 from(이상) ~ to(미만) 를 통해 범위를 지정하고, 이 범위에 해당하는 버킷을 만듭니다.e.g.\n10 달러 ~ 20 달러 사이에 존재하는 range 연산을 수행해봅니다. 출력결과에서는 doc_count 필드에 버킷 별로 포함되는 도큐먼트의 갯수를 표현하게 됩니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"range_price_result\": {\r\n      \"range\": {\r\n        \"field\": \"products.price\",\r\n        \"ranges\": [\r\n          {\r\n            \"from\": 10,\r\n            \"to\": 20\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 5,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"range_price_result\": {\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"10.0-20.0\",\r\n          \"from\": 10,\r\n          \"to\": 20,\r\n          \"doc_count\": 2233\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}","histogram#histogram":"인자값으로 전달하는 interval 수치 만큼 버킷을 구분하며, interval 만큼에 해당하는 문서들이 얼마나 존재하는지 확인할 때 사용합니다.e.g. 100 단위로 product.price 가 얼마나 존재하는지를 검색해봅니다.\n약간은 크게 봤을때 가격 분포가 어떻게 되는지 보기 위해 100 단위로 지정했습니다.\n만약 더 세분화해서 \"interval\": 10 으로 지정해보면 더 세분화된 출현 빈도를 확인할 수 있습니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"histogram_prices\": {\r\n      \"histogram\": {\r\n        \"field\": \"products.price\",\r\n        \"interval\": 100\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 2,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"histogram_prices\": {\r\n      \"buckets\": [\r\n        {\r\n          \"key\": 0,\r\n          \"doc_count\": 4672\r\n        },\r\n        {\r\n          \"key\": 100,\r\n          \"doc_count\": 263\r\n        },\r\n        {\r\n          \"key\": 200,\r\n          \"doc_count\": 12\r\n        },\r\n        {\r\n          \"key\": 300,\r\n          \"doc_count\": 1\r\n        },\r\n        {\r\n          \"key\": 400,\r\n          \"doc_count\": 1\r\n        },\r\n        {\r\n          \"key\": 500,\r\n          \"doc_count\": 0\r\n        },\r\n        {\r\n          \"key\": 600,\r\n          \"doc_count\": 0\r\n        },\r\n        {\r\n          \"key\": 700,\r\n          \"doc_count\": 0\r\n        },\r\n        {\r\n          \"key\": 800,\r\n          \"doc_count\": 0\r\n        },\r\n        {\r\n          \"key\": 900,\r\n          \"doc_count\": 0\r\n        },\r\n        {\r\n          \"key\": 1000,\r\n          \"doc_count\": 1\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}","date_histogram--date_range#date_histogram , date_range":"날짜 간격을 통해서 버킷을 생성해서 통계를 내립니다.","date_histogram#date_histogram":"e.g.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"histogram_order_date\": {\r\n      \"date_histogram\": {\r\n        \"field\": \"order_date\",\r\n        \"fixed_interval\": \"1d\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 3,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"histogram_order_date\": {\r\n      \"buckets\": [\r\n        {\r\n          \"key_as_string\": \"2024-05-16T00:00:00.000Z\",\r\n          \"key\": 1715817600000,\r\n          \"doc_count\": 146\r\n        },\r\n        {\r\n          \"key_as_string\": \"2024-05-17T00:00:00.000Z\",\r\n          \"key\": 1715904000000,\r\n          \"doc_count\": 153\r\n        },\r\n        // ... (생략) ... \r\n      ]\r\n    }\r\n  }\r\n}","date_range#date_range":"e.g.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"date_range_order_date\": {\r\n      \"date_range\": {\r\n        \"field\": \"order_date\",\r\n        \"ranges\": [\r\n          {\r\n            \"from\": \"2024-05-15\",\r\n            \"to\": \"2024-05-23\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"date_range_order_date\": {\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"2024-05-15T00:00:00.000Z-2024-05-23T00:00:00.000Z\",\r\n          \"from\": 1715731200000,\r\n          \"from_as_string\": \"2024-05-15T00:00:00.000Z\",\r\n          \"to\": 1716422400000,\r\n          \"to_as_string\": \"2024-05-23T00:00:00.000Z\",\r\n          \"doc_count\": 1023\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}","terms#terms":"필드에 지정한 문자열을 기준으로 버킷을 생성합니다. top, size, order 등을 지정 가능합니다.e.g.\nproducts.manufacturer.keyword 마다 나타난 doc 의 갯수를 카운팅합니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 0,\r\n  \"aggs\": {\r\n    \"manufacturer_count_result\":{\r\n      \"terms\": {\r\n        \"field\": \"products.manufacturer.keyword\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 5,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": null,\r\n    \"hits\": []\r\n  },\r\n  \"aggregations\": {\r\n    \"manufacturer_count_result\": {\r\n      \"doc_count_error_upper_bound\": 0,\r\n      \"sum_other_doc_count\": 783,\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"Low Tide Media\",\r\n          \"doc_count\": 1553\r\n        },\r\n        {\r\n          \"key\": \"Elitelligence\",\r\n          \"doc_count\": 1370\r\n        },\r\n        {\r\n          \"key\": \"Oceanavigations\",\r\n          \"doc_count\": 1218\r\n        },\r\n        {\r\n          \"key\": \"Tigress Enterprises\",\r\n          \"doc_count\": 1055\r\n        },\r\n        {\r\n          \"key\": \"Pyramidustries\",\r\n          \"doc_count\": 947\r\n        },\r\n        {\r\n          \"key\": \"Angeldale\",\r\n          \"doc_count\": 525\r\n        },\r\n        {\r\n          \"key\": \"Gnomehouse\",\r\n          \"doc_count\": 458\r\n        },\r\n        {\r\n          \"key\": \"Spherecords\",\r\n          \"doc_count\": 415\r\n        },\r\n        {\r\n          \"key\": \"Microlutions\",\r\n          \"doc_count\": 345\r\n        },\r\n        {\r\n          \"key\": \"Spritechnologies\",\r\n          \"doc_count\": 263\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\ne.g. 이번에는 결과를 줄여서 top N 만큼 가져와봅니다.\n3건만 가져오기 위해 \"size\": 3 을 지정해줬습니다.\n내림차순으로 정렬하기 위해 desc, asc 를 지정합니다.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 3,\r\n  \"aggs\": {\r\n    \"brands\": {\r\n      \"terms\": {\r\n        \"field\": \"products.manufacturer.keyword\",\r\n        \"order\": {\r\n          \"_count\": \"desc\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n가장 많이 노출된 products.manufacturer.keyword 을 출력합니다. size 를 3 으로 지정했고  keyword 가 가장 많이 나타난 순으로  desc 정렬했습니다.\n{\r\n  \"took\": 2,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"Vbbo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Men's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Eddie\",\r\n          \"customer_full_name\": \"Eddie Underwood\",\r\n          \"customer_gender\": \"MALE\",\r\n          \"customer_id\": 38,\r\n          \"customer_last_name\": \"Underwood\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Monday\",\r\n          \"day_of_week_i\": 0,\r\n          \"email\": \"eddie@underwood-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Elitelligence\",\r\n            \"Oceanavigations\"\r\n          ],\r\n          \"order_date\": \"2024-06-10T09:28:48+00:00\",\r\n          \"order_id\": 584677,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 11.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Elitelligence\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 6283,\r\n              \"category\": \"Men's Clothing\",\r\n              \"sku\": \"ZO0549605496\",\r\n              \"taxless_price\": 11.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 6.35,\r\n              \"_id\": \"sold_product_584677_6283\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-26T09:28:48+00:00\",\r\n              \"product_name\": \"Basic T-shirt - dark blue/white\",\r\n              \"price\": 11.99,\r\n              \"taxful_price\": 11.99,\r\n              \"base_unit_price\": 11.99\r\n            },\r\n            {\r\n              \"base_price\": 24.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Oceanavigations\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 19400,\r\n              \"category\": \"Men's Clothing\",\r\n              \"sku\": \"ZO0299602996\",\r\n              \"taxless_price\": 24.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 11.75,\r\n              \"_id\": \"sold_product_584677_19400\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-26T09:28:48+00:00\",\r\n              \"product_name\": \"Sweatshirt - grey multicolor\",\r\n              \"price\": 24.99,\r\n              \"taxful_price\": 24.99,\r\n              \"base_unit_price\": 24.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0549605496\",\r\n            \"ZO0299602996\"\r\n          ],\r\n          \"taxful_total_price\": 36.98,\r\n          \"taxless_total_price\": 36.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"eddie\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"EG\",\r\n            \"location\": {\r\n              \"lon\": 31.3,\r\n              \"lat\": 30.1\r\n            },\r\n            \"region_name\": \"Cairo Governorate\",\r\n            \"continent_name\": \"Africa\",\r\n            \"city_name\": \"Cairo\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"Vrbo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Women's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Mary\",\r\n          \"customer_full_name\": \"Mary Bailey\",\r\n          \"customer_gender\": \"FEMALE\",\r\n          \"customer_id\": 20,\r\n          \"customer_last_name\": \"Bailey\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Sunday\",\r\n          \"day_of_week_i\": 6,\r\n          \"email\": \"mary@bailey-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Champion Arts\",\r\n            \"Pyramidustries\"\r\n          ],\r\n          \"order_date\": \"2024-06-09T21:59:02+00:00\",\r\n          \"order_id\": 584021,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 24.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Champion Arts\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 11238,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0489604896\",\r\n              \"taxless_price\": 24.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 11.75,\r\n              \"_id\": \"sold_product_584021_11238\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T21:59:02+00:00\",\r\n              \"product_name\": \"Denim dress - black denim\",\r\n              \"price\": 24.99,\r\n              \"taxful_price\": 24.99,\r\n              \"base_unit_price\": 24.99\r\n            },\r\n            {\r\n              \"base_price\": 28.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Pyramidustries\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 20149,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0185501855\",\r\n              \"taxless_price\": 28.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 15.65,\r\n              \"_id\": \"sold_product_584021_20149\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T21:59:02+00:00\",\r\n              \"product_name\": \"Shorts - black\",\r\n              \"price\": 28.99,\r\n              \"taxful_price\": 28.99,\r\n              \"base_unit_price\": 28.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0489604896\",\r\n            \"ZO0185501855\"\r\n          ],\r\n          \"taxful_total_price\": 53.98,\r\n          \"taxless_total_price\": 53.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"mary\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"AE\",\r\n            \"location\": {\r\n              \"lon\": 55.3,\r\n              \"lat\": 25.3\r\n            },\r\n            \"region_name\": \"Dubai\",\r\n            \"continent_name\": \"Asia\",\r\n            \"city_name\": \"Dubai\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"V7bo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Women's Shoes\",\r\n            \"Women's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Gwen\",\r\n          \"customer_full_name\": \"Gwen Butler\",\r\n          \"customer_gender\": \"FEMALE\",\r\n          \"customer_id\": 26,\r\n          \"customer_last_name\": \"Butler\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Sunday\",\r\n          \"day_of_week_i\": 6,\r\n          \"email\": \"gwen@butler-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Low Tide Media\",\r\n            \"Oceanavigations\"\r\n          ],\r\n          \"order_date\": \"2024-06-09T22:32:10+00:00\",\r\n          \"order_id\": 584058,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 99.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Low Tide Media\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 22794,\r\n              \"category\": \"Women's Shoes\",\r\n              \"sku\": \"ZO0374603746\",\r\n              \"taxless_price\": 99.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 46.01,\r\n              \"_id\": \"sold_product_584058_22794\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T22:32:10+00:00\",\r\n              \"product_name\": \"Boots - Midnight Blue\",\r\n              \"price\": 99.99,\r\n              \"taxful_price\": 99.99,\r\n              \"base_unit_price\": 99.99\r\n            },\r\n            {\r\n              \"base_price\": 99.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Oceanavigations\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 23386,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0272202722\",\r\n              \"taxless_price\": 99.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 53.99,\r\n              \"_id\": \"sold_product_584058_23386\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T22:32:10+00:00\",\r\n              \"product_name\": \"Short coat - white/black\",\r\n              \"price\": 99.99,\r\n              \"taxful_price\": 99.99,\r\n              \"base_unit_price\": 99.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0374603746\",\r\n            \"ZO0272202722\"\r\n          ],\r\n          \"taxful_total_price\": 199.98,\r\n          \"taxless_total_price\": 199.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"gwen\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"US\",\r\n            \"location\": {\r\n              \"lon\": -118.2,\r\n              \"lat\": 34.1\r\n            },\r\n            \"region_name\": \"California\",\r\n            \"continent_name\": \"North America\",\r\n            \"city_name\": \"Los Angeles\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"aggregations\": {\r\n    \"brands\": {\r\n      \"doc_count_error_upper_bound\": 0,\r\n      \"sum_other_doc_count\": 783,\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"Low Tide Media\",\r\n          \"doc_count\": 1553\r\n        },\r\n        {\r\n          \"key\": \"Elitelligence\",\r\n          \"doc_count\": 1370\r\n        },\r\n        {\r\n          \"key\": \"Oceanavigations\",\r\n          \"doc_count\": 1218\r\n        },\r\n        {\r\n          \"key\": \"Tigress Enterprises\",\r\n          \"doc_count\": 1055\r\n        },\r\n        {\r\n          \"key\": \"Pyramidustries\",\r\n          \"doc_count\": 947\r\n        },\r\n        {\r\n          \"key\": \"Angeldale\",\r\n          \"doc_count\": 525\r\n        },\r\n        {\r\n          \"key\": \"Gnomehouse\",\r\n          \"doc_count\": 458\r\n        },\r\n        {\r\n          \"key\": \"Spherecords\",\r\n          \"doc_count\": 415\r\n        },\r\n        {\r\n          \"key\": \"Microlutions\",\r\n          \"doc_count\": 345\r\n        },\r\n        {\r\n          \"key\": \"Spritechnologies\",\r\n          \"doc_count\": 263\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}","sub-aggregation#sub-aggregation":"aggs 안에 aggs 를 하는 것을 의미합니다. 하위 버킷이 늘어나서 점점 깊이가  깊어질 수록 작업량도 늘어나고 메모리 소모량도 커지기에 오류 가능성이 커집니다. 따라서 aggs 를 지나치게 중첩해서 2레벨 이상으로 사용하는 것은 권장되지 않습니다.e.g.\nGET kibana_sample_data_ecommerce/_search \r\n{\r\n  \"size\": 3,\r\n  \"aggs\": {\r\n    \"manufacturer_count\": {\r\n      \"terms\": {\r\n        \"field\": \"products.manufacturer.keyword\"\r\n      },\r\n      \"aggs\": {\r\n        \"sum_manufacturer_prices_result\":{\r\n          \"sum\": {\r\n            \"field\": \"products.price\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 4,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"Vbbo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Men's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Eddie\",\r\n          \"customer_full_name\": \"Eddie Underwood\",\r\n          \"customer_gender\": \"MALE\",\r\n          \"customer_id\": 38,\r\n          \"customer_last_name\": \"Underwood\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Monday\",\r\n          \"day_of_week_i\": 0,\r\n          \"email\": \"eddie@underwood-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Elitelligence\",\r\n            \"Oceanavigations\"\r\n          ],\r\n          \"order_date\": \"2024-06-10T09:28:48+00:00\",\r\n          \"order_id\": 584677,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 11.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Elitelligence\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 6283,\r\n              \"category\": \"Men's Clothing\",\r\n              \"sku\": \"ZO0549605496\",\r\n              \"taxless_price\": 11.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 6.35,\r\n              \"_id\": \"sold_product_584677_6283\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-26T09:28:48+00:00\",\r\n              \"product_name\": \"Basic T-shirt - dark blue/white\",\r\n              \"price\": 11.99,\r\n              \"taxful_price\": 11.99,\r\n              \"base_unit_price\": 11.99\r\n            },\r\n            {\r\n              \"base_price\": 24.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Oceanavigations\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 19400,\r\n              \"category\": \"Men's Clothing\",\r\n              \"sku\": \"ZO0299602996\",\r\n              \"taxless_price\": 24.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 11.75,\r\n              \"_id\": \"sold_product_584677_19400\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-26T09:28:48+00:00\",\r\n              \"product_name\": \"Sweatshirt - grey multicolor\",\r\n              \"price\": 24.99,\r\n              \"taxful_price\": 24.99,\r\n              \"base_unit_price\": 24.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0549605496\",\r\n            \"ZO0299602996\"\r\n          ],\r\n          \"taxful_total_price\": 36.98,\r\n          \"taxless_total_price\": 36.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"eddie\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"EG\",\r\n            \"location\": {\r\n              \"lon\": 31.3,\r\n              \"lat\": 30.1\r\n            },\r\n            \"region_name\": \"Cairo Governorate\",\r\n            \"continent_name\": \"Africa\",\r\n            \"city_name\": \"Cairo\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"Vrbo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Women's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Mary\",\r\n          \"customer_full_name\": \"Mary Bailey\",\r\n          \"customer_gender\": \"FEMALE\",\r\n          \"customer_id\": 20,\r\n          \"customer_last_name\": \"Bailey\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Sunday\",\r\n          \"day_of_week_i\": 6,\r\n          \"email\": \"mary@bailey-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Champion Arts\",\r\n            \"Pyramidustries\"\r\n          ],\r\n          \"order_date\": \"2024-06-09T21:59:02+00:00\",\r\n          \"order_id\": 584021,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 24.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Champion Arts\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 11238,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0489604896\",\r\n              \"taxless_price\": 24.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 11.75,\r\n              \"_id\": \"sold_product_584021_11238\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T21:59:02+00:00\",\r\n              \"product_name\": \"Denim dress - black denim\",\r\n              \"price\": 24.99,\r\n              \"taxful_price\": 24.99,\r\n              \"base_unit_price\": 24.99\r\n            },\r\n            {\r\n              \"base_price\": 28.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Pyramidustries\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 20149,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0185501855\",\r\n              \"taxless_price\": 28.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 15.65,\r\n              \"_id\": \"sold_product_584021_20149\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T21:59:02+00:00\",\r\n              \"product_name\": \"Shorts - black\",\r\n              \"price\": 28.99,\r\n              \"taxful_price\": 28.99,\r\n              \"base_unit_price\": 28.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0489604896\",\r\n            \"ZO0185501855\"\r\n          ],\r\n          \"taxful_total_price\": 53.98,\r\n          \"taxless_total_price\": 53.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"mary\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"AE\",\r\n            \"location\": {\r\n              \"lon\": 55.3,\r\n              \"lat\": 25.3\r\n            },\r\n            \"region_name\": \"Dubai\",\r\n            \"continent_name\": \"Asia\",\r\n            \"city_name\": \"Dubai\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"kibana_sample_data_ecommerce\",\r\n        \"_id\": \"V7bo048BRYAsCL4Rbrbk\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"category\": [\r\n            \"Women's Shoes\",\r\n            \"Women's Clothing\"\r\n          ],\r\n          \"currency\": \"EUR\",\r\n          \"customer_first_name\": \"Gwen\",\r\n          \"customer_full_name\": \"Gwen Butler\",\r\n          \"customer_gender\": \"FEMALE\",\r\n          \"customer_id\": 26,\r\n          \"customer_last_name\": \"Butler\",\r\n          \"customer_phone\": \"\",\r\n          \"day_of_week\": \"Sunday\",\r\n          \"day_of_week_i\": 6,\r\n          \"email\": \"gwen@butler-family.zzz\",\r\n          \"manufacturer\": [\r\n            \"Low Tide Media\",\r\n            \"Oceanavigations\"\r\n          ],\r\n          \"order_date\": \"2024-06-09T22:32:10+00:00\",\r\n          \"order_id\": 584058,\r\n          \"products\": [\r\n            {\r\n              \"base_price\": 99.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Low Tide Media\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 22794,\r\n              \"category\": \"Women's Shoes\",\r\n              \"sku\": \"ZO0374603746\",\r\n              \"taxless_price\": 99.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 46.01,\r\n              \"_id\": \"sold_product_584058_22794\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T22:32:10+00:00\",\r\n              \"product_name\": \"Boots - Midnight Blue\",\r\n              \"price\": 99.99,\r\n              \"taxful_price\": 99.99,\r\n              \"base_unit_price\": 99.99\r\n            },\r\n            {\r\n              \"base_price\": 99.99,\r\n              \"discount_percentage\": 0,\r\n              \"quantity\": 1,\r\n              \"manufacturer\": \"Oceanavigations\",\r\n              \"tax_amount\": 0,\r\n              \"product_id\": 23386,\r\n              \"category\": \"Women's Clothing\",\r\n              \"sku\": \"ZO0272202722\",\r\n              \"taxless_price\": 99.99,\r\n              \"unit_discount_amount\": 0,\r\n              \"min_price\": 53.99,\r\n              \"_id\": \"sold_product_584058_23386\",\r\n              \"discount_amount\": 0,\r\n              \"created_on\": \"2016-12-25T22:32:10+00:00\",\r\n              \"product_name\": \"Short coat - white/black\",\r\n              \"price\": 99.99,\r\n              \"taxful_price\": 99.99,\r\n              \"base_unit_price\": 99.99\r\n            }\r\n          ],\r\n          \"sku\": [\r\n            \"ZO0374603746\",\r\n            \"ZO0272202722\"\r\n          ],\r\n          \"taxful_total_price\": 199.98,\r\n          \"taxless_total_price\": 199.98,\r\n          \"total_quantity\": 2,\r\n          \"total_unique_products\": 2,\r\n          \"type\": \"order\",\r\n          \"user\": \"gwen\",\r\n          \"geoip\": {\r\n            \"country_iso_code\": \"US\",\r\n            \"location\": {\r\n              \"lon\": -118.2,\r\n              \"lat\": 34.1\r\n            },\r\n            \"region_name\": \"California\",\r\n            \"continent_name\": \"North America\",\r\n            \"city_name\": \"Los Angeles\"\r\n          },\r\n          \"event\": {\r\n            \"dataset\": \"sample_ecommerce\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"aggregations\": {\r\n    \"manufacturer_count\": {\r\n      \"doc_count_error_upper_bound\": 0,\r\n      \"sum_other_doc_count\": 783,\r\n      \"buckets\": [\r\n        {\r\n          \"key\": \"Low Tide Media\",\r\n          \"doc_count\": 1553,\r\n          \"sum_manufacturer_prices_result\": { // 여기에 결과가 표시되었습니다.\r\n            \"value\": 131079.02734375\r\n          }\r\n        },\r\n        // ... (생략) ... \r\n      ]\r\n    }\r\n  }\r\n}"}},"/elasticsearch/document-api":{"title":"Document API","data":{"document-api#Document API":"","세팅--예제-데이터-import#세팅 & 예제 데이터 import":"세팅 & 예제 데이터 import 를 참고해주세요.","put#PUT":"먼저 인덱스가 아무것도 생성되지 않은 상태에서 아래의 명령을 수행합니다.\nPUT logs_index/_doc/1\r\n{\r\n  \"message\": \"PAYMENT_FAILURE\",\r\n  \"reason\": \"NETWORK_ERROR\",\r\n  \"occured_service\": \"abc-comics-payment-api\"\r\n}\n이렇게 하면 logs_index 라는 이름의 인덱스가 새로 생성되면서 데이터가 입력됩니다.\n이번에는 아래의 명령을 수행합니다. 새로운 도큐먼트를 한 건 더 insert 하는 명령입니다.\nPUT logs_index/_doc/2\r\n{\r\n  \"message\": \"PAYMENT_SUCCESS\",\r\n  \"reason\": \"SUCCESS\",\r\n  \"occured_service\": \"abc-comics-payment-api\"\r\n}\n실행시켜 보면 logs_index 라는 이름의 인덱스에 데이터가 insert 되었음을 결과화면에서 확인 가능합니다.","get#GET":"처음에 insert 했던 데이터를 조회해봅니다.\nGET logs_index/_doc/1\n출력결과는 아래와 같습니다.\n{\r\n  \"_index\": \"logs_index\",\r\n  \"_id\": \"1\",\r\n  \"_version\": 1,\r\n  \"_seq_no\": 0,\r\n  \"_primary_term\": 1,\r\n  \"found\": true,\r\n  \"_source\": {\r\n    \"message\": \"PAYMENT_FAILURE\",\r\n    \"reason\": \"NETWORK_ERROR\",\r\n    \"occured_service\": \"abc-comics-payment-api\"\r\n  }\r\n}\n두번째 insert 했던 데이터도 존재하는지 확인해봅니다.\nGET logs_index/_doc/2\n출력결과는 아래와 같습니다.\n{\r\n  \"_index\": \"logs_index\",\r\n  \"_id\": \"2\",\r\n  \"_version\": 1,\r\n  \"_seq_no\": 1,\r\n  \"_primary_term\": 1,\r\n  \"found\": true,\r\n  \"_source\": {\r\n    \"message\": \"PAYMENT_SUCCESS\",\r\n    \"reason\": \"SUCCESS\",\r\n    \"occured_service\": \"abc-comics-payment-api\"\r\n  }\r\n}","delete#DELETE":"이번에는 도큐먼트를 선택해서 삭제해봅니다. 두번째로 insert 했던 데이터를 삭제합니다.\nDELETE logs_index/_doc/2\n출력결과는 아래와 같습니다.\n{\r\n  \"_index\": \"logs_index\",\r\n  \"_id\": \"2\",\r\n  \"_version\": 2,\r\n  \"result\": \"deleted\",\r\n  \"_shards\": {\r\n    \"total\": 2,\r\n    \"successful\": 1,\r\n    \"failed\": 0\r\n  },\r\n  \"_seq_no\": 2,\r\n  \"_primary_term\": 1\r\n}","post#POST":"데이터 입력을 하는 연산입니다. PUT의 경우에는 Document id 를 입력해줘야 했습니다. POST 의 경우 Document Id 를 입력하지 않아도 됩니다.\nPOST logs_index/_doc\r\n{\r\n  \"message\": \"PAYMENT_SUCCESS\",\r\n  \"occured_service\": \"abc-comics-payment-api\"\r\n}\n출력결과는 아래와 같습니다.\n{\r\n  \"_index\": \"logs_index\",\r\n  \"_id\": \"VLZ8048BRYAsCL4RpbbY\", # 여기 \r\n  \"_version\": 1,\r\n  \"result\": \"created\",\r\n  \"_shards\": {\r\n    \"total\": 2,\r\n    \"successful\": 1,\r\n    \"failed\": 0\r\n  },\r\n  \"_seq_no\": 3,\r\n  \"_primary_term\": 1\r\n}\n자세히 확인해보면 _id 항목에 대해 VLZ8048BRYAsCL4RpbbY 라는 값이 할당되었음을 확인 가능합니다.","update#UPDATE":"도큐먼트를 수정하고자 할때 UPDATE 연산을 사용합니다. UPDATE 연산은 원하는 필드만 수정하는 것이 가능합니다.\nPOST logs_index/_update/1\r\n{\r\n  \"doc\": {\r\n    \"message\": \"PG_API_NETWORK_ERROR\"\r\n  }\r\n}\n출력결과\n{\r\n  \"_index\": \"logs_index\",\r\n  \"_id\": \"1\",\r\n  \"_version\": 2,\r\n  \"result\": \"updated\",\r\n  \"_shards\": {\r\n    \"total\": 2,\r\n    \"successful\": 1,\r\n    \"failed\": 0\r\n  },\r\n  \"_seq_no\": 4,\r\n  \"_primary_term\": 1\r\n}","bulk-api#Bulk API":"Bulk API 를 이용하면 한번의 연산으로 여러 문서를 한번에 indexing 하거나 삭제하는 것이 가능합니다. 대량 색인이 필요할 때 사용하면 됩니다._id 가 5, 6 인 데이터를 Bulk api 를 통해 indexing 합니다.\nPOST _bulk\r\n{ \"index\": {\"_index\": \"logs_index\", \"_id\": \"5\"} }\r\n{ \"field\": \"안녕하세요 (1) 번 이에요\" }\r\n{ \"index\": {\"_index\": \"logs_index\", \"_id\": \"6\"} }\r\n{ \"field\": \"안녕하세요 (2) 번 이에요\" }\n이번에는 delete 와 create 연산을 함께 수행합니다.\n_id = 5 인 도큐먼트는 삭제\n_id = 7 인 도큐먼트 생성\nPOST _bulk\r\n{ \"delete\": {\"_index\": \"logs_index\", \"_id\": \"5\"} }\r\n{ \"create\": {\"_index\": \"logs_index\", \"_id\": \"7\"} }\r\n{ \"field\": \"안녕하세요 (3) 번 이에요\" }\n이번에는 update 연산을 수행합니다.\nPOST _bulk\r\n{ \"update\": {\"_index\": \"logs_index\", \"_id\": \"6\"} }\r\n{ \"doc\": {\"field\": \"(5) 번 이에요\"} }"}},"/elasticsearch/elk-elasticsearch":{"title":"Elk Elasticsearch","data":{"elasticsearch-설치-예제#Elasticsearch 설치, 예제":"","elk-스택-설치#ELK 스택 설치":"github.com/deviantony/docker-elk 을 clone\n.env 파일 내의 주요 패스워드 들 수정\n비밀번호는 8자?이상이어야 에러가 나지 않습니다.\ndocker-compose up setup\nsetup-1 exited with code 0 이라는 메시지가 뜨면 정상설치 된 것 입니다.\ndocker-compose up -d\nkibana 는 http://localhost:5601 로 접속 가능하며, user, password 는 아래와 같이 입력합니다.\nuser : elastic\npassword : .env 파일 내에 입력한 패스워드","elasticsearch#Elasticsearch":"Elasticsearch CRUD 는 REST API 를 활용합니다.REST API 로 할 수 있는 작업들은 아래와 같습니다.\n클러스터, 노드, 색인(Index)의 상태 또는 통계를 확인 가능합니다.\n클러스터, 노드, 색인(Index)의 데이터,메타데이터 관리\nCRUD(Create, Read, Update, Delete) 수행\n인덱스 검색 작업\n페이징, 정렬, 필터링, 스크립팅, 집계 및 기타 고급작업","elasticsearch-구성#Elasticsearch 구성":"도큐먼트\n단일 데이터 단위를 Document 라고 부릅니다.\n데이터가 저장되는 최소단위이며, 하나의 문서는 다수의 필드로 구성됩니다.\nnested 구조를 지원합니다.\n인덱스\nDocument 의 집합을 인덱스라고 부릅니다.\nES 에 데이터를 저장하는 것은 인덱싱이라고 부릅니다.\n인덱스 명으로 문서를 검색합니다.\n분산환경에서는 인덱스는 여러 노드에 분산되어 저장됩니다.\n타입\n인덱스의 논리적 구조를 의미합니다.\n7.0 버전부터 인덱스당 하나의 타입을 제공하며, Index 는 Type 과 동일시 되는 개념이 되었습니다.\n아마도 7.0 부터는 타입 대신 인덱스라는 단어만 사용할 것으로 보임\n필드\n문서를 구성하는 속성 입니다.\nColumn 과 비슷한 개념입니다. 하나의 필드는 여러 데이터 타입(keyword, text)을 가질 수 있습니다.\n매핑\n데이터의 저장형태, 검색을 위해 데이터를 어떻게 접근,처리할 지를 의미하는 개념입니다.\n문서의 필드, 필드의 속성, 인덱싱 방법을 정의합니다.\n인덱스 매핑에서는 여러 데이터 타입이 지정가능하지만, 필드 명은 중복사용 불가합니다.","관계형-데이터베이스와-비교#관계형 데이터베이스와 비교":"관계형 데이터베이스의 데이터베이스 같은 개념은 일라스틱서치에서는 인덱스를 의미합니다. 관계형 데이터베이스의 테이블과 같은 개념은 일라스틱서치에서는 타입을 의미합니다.\nElasticsearch\t관계형 데이터베이스\t인덱스 (Index)\t데이터베이스\t샤드 (Shard)\t파티션\t타입 (Type)\t테이블\t문서 (Document)\t행\t필드 (Field)\t열\t매핑 (Mapping)\t스키마\tQueryDSL\tSQL\t\nElasticsearch 는 검색에 특화된 저장소이며 관계형 데이터베이스와는 목적이 조금 다릅니다. 관계형 데이터베이스는 정규화 등을 통해 데이터의 중복을 제거해 논리적이며 일관적인 데이터의 저장이 목적입니다. 반면 Elasticsearch 의 경우 검색/통계에 특화된 저장소입니다. 관계형 데이터베이스에서는 SQL로 원하는 정보를 검색하는게 가능하지만, 단순한 검색이지만, Elasticsearch 는 비정형 데이터를 Indexing 을 통해서 검색이 가능하며, 형태소 분석, 역색인을 통해 빠른 검색이 가능합니다.","elasticsearch-의-단점#Elasticsearch 의 단점":"Near Real Time (NRT) : 실시간이 아닙니다. 인덱싱된 데이터는 1초 뒤에 검색이 가능합니다.\n트랜잭션, 롤백 불가 : 리소스 소모가 큰 롤백이나 트랜잭션은 지원하지 않습니다.\n데이터 업데이트 불가 : 기존 문서를 삭제 후 변경내용으로 새로운 문서를 생성하는 reindexing 방식이기에 비용이 큽니다.","indexing-색인-인덱싱#Indexing (색인, 인덱싱)":"데이터가 인덱스 내에 도큐먼트로 저장될 때 그 데이터를 토큰들로 분해한 후 저장하는 과정을 의미합니다. 한국어로는 색인이라는 말을 자주 씁니다. 한국어로 치환한 단어가 조금 더 이질감이 느껴지지만, 자주 접하게 되는 단어이기에 알아두는 것이 좋습니다.","full-text-search-전문-검색#Full Text Search (전문 검색)":"텍스트 전체를 색인해서 특정 단어가 포함된 문서를 검색하는 것을 의미하며, Elasticsearch 에서 제공하는 다양한 플러그인을 조합해서 더 빠른 검색이 가능합니다.","inverted-index#Inverted Index":"역색인을 의미합니다. Inverted Index 를 이용하면 인덱스 내에서 검색을 원하는 단어가 포함된 모든 문서의 위치를 검색 가능합니다.Elasticsearch 의 검색이 빠른 이유는 Inverted Index 때문입니다. 관계형 데이터베이스는 모든 문서의 내용을 읽어서 검색하고 있는 키워드가 있는지 검색합니다. 따라서 연산 시에 자원소모가 크며 Elasticsearch 에 비해서는 검색에 있어서는 비효율 적입니다. Inverted Index 는 특정 Term 을 포함하고 있는 문서에 대한 인덱스 테이블을 만든 것을 의미합니다. Elasticsearch 는 이 인덱스 테이블에서 검색을 하기 때문에 검색 속도가 빠릅니다. 문서가 수천만건이 넘어가더라도 빠르게 검색이 가능합니다. 따라서 '검색'만을 위한 기능에 최적화되어 있습니다. 다만 자주 등장하는 단어 (a, the, and 등)은 오히려 느려질 수 있다는 단점이 있습니다.이 경우 Stop Words 설정을 통해 인덱스에서 제거하고 검색어에 등장해도 무시하는 것이 가능합니다.이 외에도 삽입/삭제/업데이트 시에 저장소에 오버헤드가 발생합니다. 예를 들면 여행사의 상품인덱스의 경우 상품하나 추가 시에 1시간이 넘게 소요되는 경우도 있다고 전해들은 경험이 있습니다.","eg-게시판-글-검색#e.g. 게시판 글 검색":"게시판 서비스를 만들었고 현재 관계형 데이터베이스에는 아래와 같이 저장되어 있다고 하겠습니다.\n그리고 위의 데이터베이스에서 '송중기'라는 데이터가 포함된 모든 행을 찾아보겠습니다.관계형 데이터베이스의 경우 순차적으로 탐색을 하게 되고 결국 아래와 같이 데이터를 처음부터 끝까지 순회를 하면서 '송중기' 라는 단어가 포함된 행을 찾습니다.\n이번에는 Elasticsearch 에서 '송중기'라는 단어가 포함된 문서를 모두 찾아보겠습니다.\n'송중기' 라는 단어에 대해 미리 Inverted Indexing 작업을 해둔 상태이기 때문에 doc3, doc4 에 '송중기'에 관련된 게시글이 있다는 사실을 알았습니다. 이제 이 doc3, doc4 에 있는 생성시각, 작성자, 게시글 본문, 제목 을 애플리케이션 레벨에서 매핑해서 리턴해주면 됩니다.서비스가 커져서 관계형 데이터베이스만으로 처리하기에는 스케일이 커진 경우 이렇게 일정 부분은 Elasticsearch  또는 빅데이터 시스템의 인프라와 혼용해서 사용할 수 있을 것으로 보입니다.","cluster-node-index-shard#Cluster, Node, Index, Shard":"shard 의 번호들이 어떤 인덱스에 어떤 shard 번호들이 배치되어있고 2개씩 복제되어 있는지 확인해보세요.\nCluster\n노드의 집합입니다. 노드 들을 관리하며 색인화, 검색 기능을 Cluster 레벨에서 제공합니다.\nCluster 는 고유한 이름을 가지며, 이름이 다른 Cluster 들을 여러개 두는 것 역시 가능합니다.\nCluster 를 Node 1기로만 구성하는 것 역시 가능합니다.\nNode\nElasticsearch 내의 개별 노드를 의미합니다.\n데이터 저장, 클러스터가 개별 노드들을 이용해서 노드에 indexing, 검색을 수행하게끔 합니다.\nNode 에도 고유한 이름이 부여되며, 기본값은 UUID 방식으로 지정됩니다.\n클러스터 이름을 지정해서 특정 클러스터에 소속되게끔 지정하는 것 역시 가능합니다.\nIndex\nDocument 를 모아두는 곳을 Index 라고 합니다. 관계형 데이터베이스에서 데이터베이스에 해당하는 개념이 Index 입니다.\nElasticsearch 에 데이터를 저장하는 것을 Indexing (인덱싱) 이라고 부릅니다.\nElasticsearch\nShard\n인덱스는 하나 이상의 샤드단위로 분산해서 저장하는 것이 가능합니다.","shard-primary-shard-replica-shard#Shard, Primary Shard, Replica Shard":"Index 는 하나 이상의 Shard 로 분리할 수 있고, 데이터를 Shard 단위로 분산해서 저장할 수 있습니다. 카프카의 토픽을 파티션 단위로 나누는 것과 유사한 개념입니다.각각의 Node 에는 Primary Shard 와 Replica Shard 를 둘 수 있습니다. Replica Shard 는 장애 상황에 대비하기 위해 Primary Shard 의 복제본으로 두는 Shard 입니다.만약 Node 0 번에 장애가 나면, Node 0 에 있는 Primary Shard 인 Shard 0 은 사용할 수 없게 됩니다. 이 경우 Node 2 에 복제를 해둔 Replica Shard 중 Shard 0을 Primary Shard 가 되도록 지정됩니다.장애가 난 Node 0 번이 복구가 되기를 기다려도 복구가 되지 않을 경우 Node 0 의 레플리카 샤드 들을 다른 노드 들로 복제하는 작업이 수행됩니다. 운영을 위해 미리 설정해둔 샤드의 개수가 있는데, 장애가 난 Node 로 인해 레플리카 갯수가 일정 시간 동안 유지되지 않으므로 장애가 나지 않은 다른 노드의 레플리캬 샤드 들을 복제하게 됩니다.","마스터-노드-데이터-노드-코디네이팅-노드-인제스트-노드#마스터 노드, 데이터 노드, 코디네이팅 노드, 인제스트 노드":"마스터 노드\n마스터 노드는 클러스터 상태 정보를 관리합니다. 지연이 없고 네트워크 가용성(Availability)가 좋은 노드를 마스터 노드로 선택합니다.\n클러스터를 노드 1기로 구성하면 1기의 노드가 마스터 노드가 됩니다.\n마스터 노드 다운시 다른 마스터 후보 노드 중 하나가 마스터 노드로 선출됩니다.\n마스터 후보 노드 들은 node.data:false 로 설정해서 노드 역할만 하며, 데이터는 저장하지 않도록 지정하는 것 역시 가능합니다.\n마스터 후보 노드 (master eligible) 들은 마스터 노드의 정보들을 공유하고 있으며 즉시 마스터 역할을 수행 가능합니다. 노드, 샤드의 갯수가 많은 상황이면 일부 노드만 마스터 노드 옵션을 true, 나머지는 false 로 설정해서 부하를 줄이는 편입니다.\n최소 마스터 대수 설정에 관련된 내용도 있는데 여기에 대해서는 Split Brain 에서 정리합니다.\n데이터 노드\n도큐먼트가 저장되는 노드입니다.\n인덱싱 작업에 리소스가 많이 소모되는 노드이며, 리소스를 모니터링하는 것이 필요합니다.\n운영환경에서는 마스터 노드와 데이터 노드를 분리하는 것이 권장되며, 인덱싱할 도큐먼트가 적다면 굳이 분리하지 않아도 됩니다.\n코디네이팅 노드\n들어온 요청을 분산시켜주는 노드입니다.\n라운드 로빈 방식입니다.\n인제스트 노드\nIndexing(색인) 전에 데이터를 전처리하는 노드 입니다.\n데이터 포맷 변경을 위해 스크립트로 파이프라인을 구성하기도 합니다.","split-brain-todo#Split Brain (todo)":"마스터 후보 노드 사이에 네트워크가 단절 되었을 때 마스터 후보 노드 각각은 마스터로 승격됩니다. 이렇게 되면 클러스터가 두개가 되어서 독립적인 클러스터 두개로 동작하게 되는 현상이 발생합니다.이렇게해서 발생한 독립적인 클러스터 두개는 클러스터 마다 각각 독립적으로 데이터 쓰기, 업데이트가 발생하는 문제가 생기고, 개별 클러스터에 존재하는 마스터 노드로 인해 데이터가 동기화되지 않는 문제가 있습니다.여기에 대한 해결 방법들은 아래와 같습니다.\ndiscovery.zen.minimum_master_nodes 옵션을 아래와 같이 설정해줍니다.\n(master_eligible_nodes/2) + 1\n마스터 노드 후보 갯수를 홀수로 지정\nsplit brain 발생 후 네트워크 복구 시 투표를 통해 두기의 클러스터 중 하나를 선택 후 선택된 클러스터를 기준으로 데이터를 맞춥니다.\n이 부분에 대해서는 조금 더 자료를 찾아본 후 정리를 하겠습니다.","opensearch-vs-aws-opensearch-vs-elasticsearch#Opensearch vs AWS Opensearch vs Elasticsearch":"https://www.elastic.co/kr/amazon-opensearch-service","opensearch#Opensearch":"AWS 에서 Elasticsearch, Kibana 의 ALv2(Apache License 2.0) 오픈소스를 fork 한 것을 Opensearch 라고 명명했습니다.\nElasticsearch 의 대부분의 기능을 사용 가능합니다.\n100% 오픈소스이며, 현재는 Opensearch 에서 자체 개발 및 업데이트를 진행합니다.\nhttps://aws.amazon.com/ko/what-is/opensearch/\nElasticsearch 7.10 이후의 Elasticsearch 버전은 오픈소스가 아니며, ALV2 라이선스로 배포되지 않아서 Amazon Opensearch Service 는 Elasticsearh 7.10 까지만 지원됩니다.\nElasticsearch 7.10 이후 부터는 Amazon 에서 관리하는 오픈소스 Opensearch 의 버전으로 기능들을 제공하게 되었습니다.","aws-opensearch#AWS Opensearch":"AWS Opensearch 는 AWS 에서 제공하는 매니지드 Opensearch 이며, AWS 에서 클러스터 관리를 알아서 해주지만 내장된 플러그인만 사용가능하다는 단점 존재합니다.\nOpensearch 는 es 에 등록되지 않은 플러그인들을 설치할 수 있습니다.\nhttps://aws.amazon.com/ko/opensearch-service/getting-started/","elasticsearch-1#Elasticsearch":"2021년 1월 Elastic 은 소프트웨어 라이센스 전략을 변경했는데, Elasticsearch 및 Kibana 의 새 버전을 출시하지 않겠다고 발표했습니다.\nElasticsearch 7.10 까지만 ALv2 로 오픈소스\nElasticsearch 7.10 이후의 버전은 유료 서비스\n설치해서 사용은 가능하지만 추가 기능을 사용하기 위해서는 라이센스 구매가 필수적입니다.","aggregation#Aggregation":"","cache#Cache":"","shart-request-cache#Shart Request Cache":"","field-data-cache#Field Data Cache":"","metrics-bucket-aggregation#Metrics, Bucket Aggregation":"","metric-aggregation#Metric Aggregation":"","bucket-aggregation#Bucket Aggregation":"","mapping#Mapping":""}},"/elasticsearch/search-api-querydsl":{"title":"Search API Querydsl","data":{"search-api-querydsl#Search API, Querydsl":"","세팅--예제-데이터-import#세팅 & 예제 데이터 import":"세팅 & 예제 데이터 import 를 참고해주세요.\n세팅 & 예제 데이터 import 에서도 설명하고 있지만, 이번 예제에서 사용하는 예제 도큐먼트들의 생성 구문을 여기에서 한번 더 정리해보면 아래와 같습니다. 아래 명령을 키바나 콘솔에서 입력해주세요logs_index_202406\nPOST _bulk\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"1\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-coupon-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"2\"} }\r\n{ \"status\": \"NETWORK_ERROR\", \"message\": \"PAYMENT_API_TIMEOUT\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"inicis\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"3\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"NAVER\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"4\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"5\"} }\r\n{ \"status\": \"ILLEGAL_ARGUMENT\", \"message\": \"DUPLICATED_PRIMARY_KEY\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"6\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"7\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"8\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-order-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"9\"} }\r\n{ \"status\": \"CONNECTIONLESS\", \"message\": \"CIRCUIT_BREAKER_ON\", \"occurred-service\": \"abc-delivery-api\" }\nlogs_index_202407\nPOST _bulk\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"1\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-coupon-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"2\"} }\r\n{ \"status\": \"NETWORK_ERROR\", \"message\": \"PAYMENT_API_TIMEOUT\", \"occurred-service\": \"abc-banking-api\", \"vendor\" : \"inicis\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"3\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-banking-api\", \"vendor\" : \"NAVER\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"4\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"5\"} }\r\n{ \"status\": \"ILLEGAL_ARGUMENT\", \"message\": \"DUPLICATED_PRIMARY_KEY\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"6\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"7\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"8\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-order-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202405\", \"_id\": \"9\"} }\r\n{ \"status\": \"CONNECTIONLESS\", \"message\": \"CIRCUIT_BREAKER_ON\", \"occurred-service\": \"abc-delivery-api\" }","search-api#Search API":"Elasticsearch 의 Search API 는 여러가지의 검색 방식을 제공하는데 아래와 같습니다.\nURI\n간편한 방식의 쿼리입니다.\nMultitenancy\n여러 개의 인덱스를 묶어서 함께 검색할 때 사용합니다.\n* 과 같은 표현식으로 비슷한 접두사를 가지는 인덱스들을 선택해서 선택된 인덱스들에 대해 일괄적으로 조회하는 것이 가능합니다.\nQueryDSL (RequestBody)\n조금 더 정밀하고 강력한 검색을 위해 RequestBody 로 json 형식의 QueryDSL (Domain Specific Language)를 사용하는 검색방식입니다.\nQueryDSL 에서 query 필드 내에 사용할 수 있는 연산들은 아래와 같습니다.\nrange : gte, lte , ge, le\nbool : must, must_not, should, filter\nrelevancy\nfull text query\nmatch\nmatch_phrase query\nmulti-match query\nmatch all","uri#URI":"간편한 방식의 쿼리이며, 간단하게 데이터가 존재하는지 콘솔에서 수기로 확인하려고 할때 사용하기도 하고, 복잡한 쿼리가 불필요할 때 사용하기도 합니다.\nfield:검색어\n조건식 결합 : AND, OR 모두 지원\n조건식1 AND 조건식2\n조건식2 OR 조건식3\nquery parameter 는 굉장히 다양한 파라미터가 존재합니다.\n참고 : elastic.co - Query parameters","eg-messagecircuit_breaker_on#e.g. message:CIRCUIT_BREAKER_ON":"POST logs_index_202406/_search?q=message:CIRCUIT_BREAKER_ON\n출력결과\n{\r\n  \"took\": 6,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1.89712,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"9\",\r\n        \"_score\": 1.89712,\r\n        \"_source\": {\r\n          \"status\": \"CONNECTIONLESS\",\r\n          \"message\": \"CIRCUIT_BREAKER_ON\",\r\n          \"occurred-service\": \"abc-delivery-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","eg-occurred-serviceabc-statistics-api#e.g. occurred-service:\"abc-statistics-api\"":"꼭 \"\" (쌍따옴표)로 감싸줘야 원하는 결과가 검색됩니다.\nPOST logs_index_202406/_search?q=occurred-service:\"abc-statistics-api\"\n출력결과\n{\r\n  \"took\": 2,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 2,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1.4888809,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"6\",\r\n        \"_score\": 1.4888809,\r\n        \"_source\": {\r\n          \"status\": \"OK\",\r\n          \"message\": \"OK\",\r\n          \"occurred-service\": \"abc-statistics-api\"\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"7\",\r\n        \"_score\": 1.4888809,\r\n        \"_source\": {\r\n          \"status\": \"OK\",\r\n          \"message\": \"OK\",\r\n          \"occurred-service\": \"abc-statistics-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","eg-or-연산--network_error-or-connectionless-검색#e.g. OR 연산 : NETWORK_ERROR OR CONNECTIONLESS 검색":"POST logs_index_202406/_search?q=status:\"NETWORK_ERROR\" OR status:\"CONNECTIONLESS\"\n출력결과\n{\r\n  \"took\": 2,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 2,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1.89712,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"2\",\r\n        \"_score\": 1.89712,\r\n        \"_source\": {\r\n          \"status\": \"NETWORK_ERROR\",\r\n          \"message\": \"PAYMENT_API_TIMEOUT\",\r\n          \"occurred-service\": \"abc-payment-api\",\r\n          \"vendor\": \"inicis\",\r\n          \"bank\": \"toss\"\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"9\",\r\n        \"_score\": 1.89712,\r\n        \"_source\": {\r\n          \"status\": \"CONNECTIONLESS\",\r\n          \"message\": \"CIRCUIT_BREAKER_ON\",\r\n          \"occurred-service\": \"abc-delivery-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","eg-and-연산--occurred-serviceabc-delivery-api-and-messagecircuit_breaker_on#e.g. AND 연산 : occurred-service:\"abc-delivery-api\" AND message:\"CIRCUIT_BREAKER_ON\"":"POST logs_index_202406/_search?q=occurred-service:\"abc-delivery-api\" AND message:\"CIRCUIT_BREAKER_ON\"\n출력결과\n{\r\n  \"took\": 18,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 3.8968265,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"9\",\r\n        \"_score\": 3.8968265,\r\n        \"_source\": {\r\n          \"status\": \"CONNECTIONLESS\",\r\n          \"message\": \"CIRCUIT_BREAKER_ON\",\r\n          \"occurred-service\": \"abc-delivery-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","eg-qcircuit_breaker_on#e.g. q=\"CIRCUIT_BREAKER_ON\"":"전체 index 에서 원하는 단어가 있는지를 조회\nPOST logs_index_202406/_search?q=\"CIRCUIT_BREAKER_ON\"\n출력결과\n{\r\n  \"took\": 10,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1.89712,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"logs_index_202406\",\r\n        \"_id\": \"9\",\r\n        \"_score\": 1.89712,\r\n        \"_source\": {\r\n          \"status\": \"CONNECTIONLESS\",\r\n          \"message\": \"CIRCUIT_BREAKER_ON\",\r\n          \"occurred-service\": \"abc-delivery-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","multitenancy#Multitenancy":"여러 개의 인덱스를 묶어서 함께 검색할 때 사용합니다.\n* 과 같은 표현식으로 비슷한 접두사를 가지는 인덱스들을 선택해서 선택된 인덱스들에 대해 일괄적으로 조회하는 것이 가능합니다.","eg-2024년도-5월-2024년도-6월-기록을-함께-조회#e.g. 2024년도 5월, 2024년도 6월 기록을 함께 조회":"GET logs_index_2024*/_search","querydsl-requestbody#QueryDSL (RequestBody)":"조금 더 정밀하고 강력한 검색을 위해 RequestBody 로 json 형식의 QueryDSL (Domain Specific Language)를 사용하는 검색방식입니다. QueryDSL 연산에서 사용할 수 있는 연산자들은 아래와 같습니다.\nsize : 검색으로 돌려받은 document 갯수를 의미합니다.\nfrom : 몇번째 문서부터 를 의미\ntimeout : 검색 요청 시 timeout 을 지정\ntimeout 을 작게 지정할 경우 전체 샤드에서 timeout 을 넘기지 않은 문서만 출력됩니다.\n_source : 검색 시 필요한 필드만 추려서 리턴하려 할때 사용합니다.\nquery : 검색 식의 쿼리문\naggs : Aggregation 을 지정할 때 사용하는 필드입니다.\nsort : 문서의 정렬 방식을 지정합니다.\n형식\n{\r\n    \"size\": \"\",\r\n    \"from\": \"\",\r\n    \"timeout\": \"\",\r\n    \"_source\": \"\",\r\n    \"query\": \"\",\r\n    \"aggs\": \"\",\r\n    \"sort\": \"\"\r\n}\nQueryDSL 에서 query 필드 내에 사용할 수 있는 연산들은 아래와 같습니다.\nrange\nbool : must, must_not, should, filter\nrelevancy\nfull text query\nmatch\nmatch_phrase query\nmulti-match query\nmatch all\nQueryDSL 을 통해 조회를 한 후에 돌려받는 결과값의 형식은 아래와 같습니다.\n{\r\n    \"took\": \"\", // 얼마나 걸렸는지\r\n    \"timed_out\": \"\", // timed_out 발생 여부\r\n    \"shards\": {\r\n        \"total\": \"\", // Query 요청시 Query 가 요청된 전체 샤드 수\r\n        \"successful\": \"\", // Query 에 성공적으로 응답한 샤드 수\r\n        \"failed\": \"\" // Query 에 실패한 샤드 수\r\n    },\r\n    \"hits\": {\r\n        \"total\" : \"\", // Query 를 통해 검색(hit)된 문서의 전체 수,\r\n        \"max_score\" : \"\", // Query 에 대한 결과밧 중 문서의 score 중 가장 높은 값\r\n        \"hits\": \"\" // Query 를 통해 검색된 결과 항목들\r\n    }\r\n}","range#range":"숫자, 날짜 등에 대해 range로 검색이 가능하며 gte, lte , ge, le 등과 같은 연산을 제공합니다.","예제-데이터#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-coupon-api\" , }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"NETWORK_ERROR\", \"message\": \"PAYMENT_API_TIMEOUT\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"inicis\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"3\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"NAVER\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"4\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"5\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"ILLEGAL_ARGUMENT\", \"message\": \"DUPLICATED_PRIMARY_KEY\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"6\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"7\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"8\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-order-api\" }\r\n{ \"index\": {\"_index\": \"service_logs_index_202406\", \"_id\": \"9\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"status\": \"CONNECTIONLESS\", \"message\": \"CIRCUIT_BREAKER_ON\", \"occurred-service\": \"abc-delivery-api\" }\nrange 연산의 종류\nlte (less than or equal to), gte (greater than or equal to)\nlt (less than), gt (greater than)","eg-gte-lte#e.g. gte, lte":"GET service_logs_index_202406/_search \r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"id\" : {\r\n        \"gte\": 1,\r\n        \"lte\": 2\r\n      }\r\n    }\r\n  }\r\n}","eg-gte-lte-1#e.g. gte, lte":"아래 예제는 Mapping API 에서 더 자세히 다룰 예정입니다.\nGET service_logs_index_202406/_search \r\n{\r\n  \"query\": {\r\n    \"range\": {\r\n      \"created\" : {\r\n        \"gte\": \"2024-06-01 00:00:02\",\r\n        \"lte\": \"2024-06-01 00:00:07\"\r\n      }\r\n    }\r\n  }\r\n}","bool#bool":"must, must_not, should, filter 와 같은 연산들이 있습니다.\nmust : 쿼리에 대해 true 로 매칭되는 모든 도큐먼트들을 조회합니다.\nmust_not : 쿼리에 대해 false 로 메칭되는 모든 도큐먼트들을 조회합니다.\nshould : 쿼리에 해당하는 도큐먼트 들의 점수를 높입니다.\nfilter: 쿼리에 대해 매칭되는(=true) 모든 도큐먼트들을 필터링합니다. 스코어 계산은 하지 않으며 score 계산을 하지 않기에 must 보다는 속도가 빠르며 캐싱이 가능합니다.","형식#형식":"GET {인덱스명}/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        { ... }, …\r\n      ],\r\n      \"must_not\": [\r\n        { ... }, …\r\n      ],\r\n      \"should\": [\r\n        { ... }, …\r\n      ],\r\n      \"filter\": [\r\n        { ... }, …\r\n      ]\r\n    }\r\n  }\r\n}","예제-데이터-1#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"Doby 는 자유에요\", \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \", \"author_id\": 1, \"occurred-service\": \"abc-coupon-api\"}\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"가입인사드립니다.\", \"content\": \"안녕하세요. 반갑습니다.\", \"author_id\": 2, \"occurred-service\": \"abc-payment-api\" }","eg#e.g.":"GET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\"term\" : {\"author_id\": 1}}\r\n      ]\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user_comment_history_202406\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"created\": \"2024-06-01 00:00:01\",\r\n          \"title\": \"Doby 는 자유에요\",\r\n          \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \",\r\n          \"author_id\": 1,\r\n          \"occurred-service\": \"abc-coupon-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","eg-range-와-함께-쓰기#e.g. range 와 함께 쓰기":"GET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"range\": {\r\n            \"author_id\": {\r\n              \"gte\": 1,\r\n              \"lt\": 2\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user_comment_history_202406\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"created\": \"2024-06-01 00:00:01\",\r\n          \"title\": \"Doby 는 자유에요\",\r\n          \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \",\r\n          \"author_id\": 1,\r\n          \"occurred-service\": \"abc-coupon-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","relevancy#relevancy":"정확도에 대한 지표입니다. score 라는 값을 통해서 판단 가능합니다. BM25 라는 것을 사용하며 공식은 아래와 같습니다.\n출처 : https://en.wikipedia.org/wiki/Okapi_BM25\n자세한 설명은 Okapi BM25란 무엇인가? (TF-IDF와 비교) 을 참고해주세요.\nscore 는 검색 결과가 얼마나 일치하는 지를 의미합니다.\nTF (Term Frequency) : 문서에서 특정 단어의 출현 빈도. 도큐먼트 내에 텀이 많으면 많을 수록 관련도가 높아집니다.\nIDF (Inverse Document Frequency) : 전체 문서 들 에서 나머지 문서에서 해당 단어가 몇 번 사용되었는지를 의미하는 지표입니다. Term 이 포함된 도큐먼트 갯수가 많을 수록 Term 에 대한 점수가 감소하게 됩니다.\nField Length : 도큐먼트에서 필드 길이가 짧은 필드에 있는 텀의 중요도가 더 큽니다. 텍스트 길이가 짧은 필드에 검색어를 포함할 수록 점수가 높아집니다.","match#match":"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query.html\n텍스트와 매칭이 되는 도큐먼트 들을 검색하는 데에 사용되는 QueryDSL 입니다.\n텍스트는 보통 Analyzer 를 이용해서 분석된 후 검색되는데, Analyzer 는 일반적으로 Standard Analyzer 가 기본으로 설정되어 있습니다.","예제-데이터-2#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"Doby 는 자유에요\", \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \", \"author_id\": 1, \"occurred-service\": \"abc-coupon-api\"}\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"가입인사드립니다.\", \"content\": \"안녕하세요. 반갑습니다.\", \"author_id\": 2, \"occurred-service\": \"abc-payment-api\" }\ne.g.\nGET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"title\": {\r\n        \"query\": \"Doby\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 1,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 0.5754429,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user_comment_history_202406\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 0.5754429,\r\n        \"_source\": {\r\n          \"created\": \"2024-06-01 00:00:01\",\r\n          \"title\": \"Doby 는 자유에요\",\r\n          \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \",\r\n          \"author_id\": 1,\r\n          \"occurred-service\": \"abc-coupon-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","match_phrase-query#match_phrase query":"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase.html띄워쓰기까지 포함해서 정확하게 일치되는 phrase 를 검색할 때 사용됩니다. \"slop\" 이라는 것을 설정가능한데 slop 은 지정된 숫자만큼 단어 사이에 다른 검색어가 들어가는 것을 허용하는 것을 의미합니다.","예제-데이터-3#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"Doby 는 자유에요\", \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \", \"author_id\": 1, \"occurred-service\": \"abc-coupon-api\"}\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"가입인사드립니다.\", \"content\": \"안녕하세요. 반갑습니다.\", \"author_id\": 2, \"occurred-service\": \"abc-payment-api\" }","eg-1#e.g.":"GET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"match_phrase\": {\r\n      \"content\": {\r\n        \"query\": \"이 메시지는 2024년 6월 도비로부터\"\r\n      }\r\n    }\r\n  }\r\n}\n출력결과\nGET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"match_phrase\": {\r\n      \"content\": {\r\n        \"query\": \"이 메시지는 2024년 6월 도비로부터\"\r\n      }\r\n    }\r\n  }\r\n}","multi-match-query#multi-match query":"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html","예제-데이터-4#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"Doby 는 자유에요\", \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \", \"author_id\": 1, \"occurred-service\": \"abc-coupon-api\"}\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"가입인사드립니다.\", \"content\": \"안녕하세요. 반갑습니다.\", \"author_id\": 2, \"occurred-service\": \"abc-payment-api\" }","eg-2#e.g.":"GET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"multi_match\": {\r\n      \"query\": 2024,\r\n      \"fields\": [\"content\", \"created_at\"]\r\n    }\r\n  }\r\n}","match-all#match all":"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-all-query.html","예제-데이터-5#예제 데이터":"POST _bulk\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"1\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"Doby 는 자유에요\", \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \", \"author_id\": 1, \"occurred-service\": \"abc-coupon-api\"}\r\n{ \"index\": {\"_index\": \"user_comment_history_202406\", \"_id\": \"2\"} }\r\n{ \"created\": \"2024-06-01 00:00:01\", \"title\": \"가입인사드립니다.\", \"content\": \"안녕하세요. 반갑습니다.\", \"author_id\": 2, \"occurred-service\": \"abc-payment-api\" }","eg-3#e.g.":"GET user_comment_history_202406/_search\r\n{\r\n  \"query\": {\r\n    \"match_all\": {\r\n      \r\n    }\r\n  }\r\n}\n출력결과\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 2,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \"hits\": [\r\n      {\r\n        \"_index\": \"user_comment_history_202406\",\r\n        \"_id\": \"1\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"created\": \"2024-06-01 00:00:01\",\r\n          \"title\": \"Doby 는 자유에요\",\r\n          \"content\": \"이 메시지는 2024년 6월 도비로부터 시작되어... \",\r\n          \"author_id\": 1,\r\n          \"occurred-service\": \"abc-coupon-api\"\r\n        }\r\n      },\r\n      {\r\n        \"_index\": \"user_comment_history_202406\",\r\n        \"_id\": \"2\",\r\n        \"_score\": 1,\r\n        \"_source\": {\r\n          \"created\": \"2024-06-01 00:00:01\",\r\n          \"title\": \"가입인사드립니다.\",\r\n          \"content\": \"안녕하세요. 반갑습니다.\",\r\n          \"author_id\": 2,\r\n          \"occurred-service\": \"abc-payment-api\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}","full-text-query#Full Text Query":"https://www.elastic.co/guide/en/elasticsearch/reference/current/full-text-queries.htmlFull Text Query 를 사용하면 텍스트 필드를 검색할 수 있습니다."}},"/":{"title":"Introduction","data":{"":"Elasticsearch\nLogstash\nKibana"}},"/elasticsearch/settings-and-import-example-data":{"title":"Settings and Import Example Data","data":{"세팅--예제-데이터-import#세팅 & 예제 데이터 Import":"","elk-스택-설치#ELK 스택 설치":"Elasticsearch 가 처음이라면 아래의 과정을 통해 설치를 해주세요.\ngithub.com/deviantony/docker-elk 을 clone\n.env 파일 내의 주요 패스워드 들 수정\n비밀번호는 8자?이상이어야 에러가 나지 않습니다.\ndocker-compose up setup\nsetup-1 exited with code 0 이라는 메시지가 뜨면 정상설치 된 것 입니다.\ndocker-compose up -d\nkibana 는 http://localhost:5601 로 접속 가능하며, user, password 는 아래와 같이 입력합니다.\nuser : elastic\npassword : .env 파일 내에 입력한 패스워드","콘솔-접속#콘솔 접속":"키바나 콘솔 접속 주소인 http://localhost:5601 로 접속합니다.\n콘솔은 아래와 같이 사용 가능합니다.아래의 코드를 입력합니다.\nPUT helloworld/_doc/1\r\n{\r\n  \"name\": \"aaa\",\r\n  \"message\": \"This is aaa\"\r\n}\n그리고 오른쪽 상단의 Run 버튼을 누르거나 Ctrl + Enter 키를 눌러서 명령을 실행합니다.\n이렇게 하면 index 를 생성해두지 않은 상태라면 새로운 index 가 생성됩니다.","kibana-sample-data#kibana Sample Data":"이번 예제에서는 kibana sample data 를 사용합니다. kibana 콘솔에서는 아래의 메뉴를 통해서 kibana Sample Data 를 사용할 수 있습니다.kibana 페이지인 http://localhost:5601 에 접속해서 Try sample data 버튼을 클릭해주세요.\n나타난 페이지에서는 Other sample data sets 라는 버튼을 클릭해주세요. 그리고 조금 오래 기다려야 아래와 같은 예제 메뉴들이 나타납니다. 나타난 예제 메뉴 들 중 이번 문서에서는 Sample eCommerce orders 를 사용하기로 결정했습니다.\nView Data 버튼을 클릭해보면 여러 버튼들이 나타나는데, 원하는 화면들을 모두 들어가서 어떤 기능들이 있는지 확인해봐도 좋습니다.\nDiscover 에는 아래와 같은 화면들이 보여집니다.\nDashboard 에는 아래와 같은 화면이 나타납니다.\nCanvas 에는 아래와 같은 화면들이 나타납니다.\nMap 에는 아래와 같은 화면들이 나타납니다.","예제-데이터-확인해보기#예제 데이터 확인해보기":"이번에는 kibana 콘솔로 진입합니다. (좌측 상단 햄버거 버튼 → Dev Tools 버튼 클릭)아래와 같이 kibana_sample_data_ecommerce 라는 이름의 인덱스가 추천으로 나타나는 것을 확인할 수 있습니다.\n아래의 명령을 수행합니다.\nGET kibana_sample_data_ecommerce/_search\n출력결과로 굉장히 많은 데이터가 출력됩니다.\n{\r\n  \"took\": 1,\r\n  \"timed_out\": false,\r\n  \"_shards\": {\r\n    \"total\": 1,\r\n    \"successful\": 1,\r\n    \"skipped\": 0,\r\n    \"failed\": 0\r\n  },\r\n  \"hits\": {\r\n    \"total\": {\r\n      \"value\": 4675,\r\n      \"relation\": \"eq\"\r\n    },\r\n    \"max_score\": 1,\r\n    \r\n    // ... (생략) ... 내용이 길어서 생략합니다.\r\n    \r\n  }\r\n}","search-api-연습을-위한-예제-insert#search API 연습을 위한 예제 insert":"아래 데이터를 콘솔에서 입력해주세요\nPOST _bulk\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"1\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-coupon-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"2\"} }\r\n{ \"status\": \"NETWORK_ERROR\", \"message\": \"PAYMENT_API_TIMEOUT\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"inicis\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"3\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-payment-api\", \"vendor\" : \"NAVER\", \"bank\" : \"toss\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"4\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"5\"} }\r\n{ \"status\": \"ILLEGAL_ARGUMENT\", \"message\": \"DUPLICATED_PRIMARY_KEY\", \"occurred-service\": \"abc-comment-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"6\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"7\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-statistics-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"8\"} }\r\n{ \"status\": \"OK\", \"message\": \"OK\", \"occurred-service\": \"abc-order-api\" }\r\n{ \"index\": {\"_index\": \"logs_index_202406\", \"_id\": \"9\"} }\r\n{ \"status\": \"CONNECTIONLESS\", \"message\": \"CIRCUIT_BREAKER_ON\", \"occurred-service\": \"abc-delivery-api\" }"}}}